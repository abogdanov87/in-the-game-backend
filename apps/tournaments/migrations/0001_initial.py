# Generated by Django 2.2.6 on 2021-06-11 20:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseTournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('ordering', models.IntegerField(default=1, verbose_name='Позиция')),
                ('active', models.BooleanField(default=True, verbose_name='Активный')),
            ],
            options={
                'verbose_name': 'Базовый турнир',
                'verbose_name_plural': 'Базовые турниры',
                'db_table': 'base_tournament',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('abbreviation', models.CharField(blank=True, max_length=32, null=True, verbose_name='Аббревиатура')),
                ('flag', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='flags/', verbose_name='Флаг')),
                ('active', models.BooleanField(default=True, verbose_name='Активный')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('logo', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='logos/', verbose_name='Логотип')),
                ('active', models.BooleanField(default=True, verbose_name='Активный')),
                ('base_tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tournament_base', to='tournaments.BaseTournament', verbose_name='Турнир')),
            ],
            options={
                'verbose_name': 'Турнир',
                'verbose_name_plural': 'Турниры',
                'db_table': 'tournament',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_type', models.CharField(choices=[('club', 'Клуб'), ('national', 'Сборная')], default='club', max_length=32, verbose_name='Тип')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('town', models.CharField(blank=True, max_length=255, null=True, verbose_name='Город')),
                ('short_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Краткое название')),
                ('abbreviation', models.CharField(blank=True, max_length=32, null=True, verbose_name='Аббревиатура')),
                ('badge', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='badges/', verbose_name='Эмблема')),
                ('active', models.BooleanField(default=True, verbose_name='Активный')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='country_team', to='tournaments.Country', verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
                'db_table': 'team',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_type', models.CharField(choices=[('qualification', 'Квалификация'), ('group stage', 'Групповая стадия'), ('round of 32', '1/16 финала'), ('round of 16', '1/8 финала'), ('quarterfinal', 'Четвертьфинал'), ('semifinal', 'Полуфинал'), ('final', 'Финал')], default='group stage', max_length=32, verbose_name='Стадия')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('ordering', models.IntegerField(default=1, verbose_name='Порядок')),
                ('base_tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tournament_stage', to='tournaments.BaseTournament', verbose_name='Турнир')),
            ],
            options={
                'verbose_name': 'Стадия',
                'verbose_name_plural': 'Стадии',
                'db_table': 'stage',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Активный')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tournament_participant', to='tournaments.Tournament', verbose_name='Турнир')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='users_participant', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'db_table': 'participant',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(blank=True, max_length=128, null=True, verbose_name='Место проведения')),
                ('status', models.CharField(choices=[('not started', 'Не начался'), ('started', 'Начался'), ('finished', 'Завершен'), ('canceled', 'Отменен')], default='not started', max_length=32, verbose_name='Статус')),
                ('base_tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tournament_match', to='tournaments.BaseTournament', verbose_name='Турнир')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stage_match', to='tournaments.Stage', verbose_name='Стадия')),
                ('team_away', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='team_away_match', to='tournaments.Team', verbose_name='Команда (выезд)')),
                ('team_home', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='team_home_match', to='tournaments.Team', verbose_name='Команда (дома)')),
            ],
            options={
                'verbose_name': 'Матч',
                'verbose_name_plural': 'Матчи',
                'db_table': 'match',
            },
        ),
    ]
